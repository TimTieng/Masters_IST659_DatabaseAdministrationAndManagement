-- DROP ASSETS
USE testSpotify
GO;

DROP TABLE Events
GO;

DROP DATABASE testSpotify
GO;

DROP TABLE Record_Labels
GO;

DROP TABLE Genres
GO;

DROP TABLE Albums
GO;

DROP TABLE Artists
GO;

-- CREATE ASSETS
CREATE DATABASE testSpotify
GO;

USE testSpotify
CREATE TABLE Artists (
    artist_id INT NOT NULL,
    artist_name VARCHAR(50) NOT NULL,
    artist_genre_id INT NOT NULL,
    artist_signing_date DATETIME NOT NULL,
    artist_record_label_id INT NOT NULL,
    artist_number_of_albums INT NOT NULL,
    artist_on_tour VARCHAR(5),
    PRIMARY KEY(artist_id),
    FOREIGN KEY(artist_genre_id) REFERENCES Genres(genre_id),
    FOREIGN KEY(artist_record_label_id) REFERENCES RecordLabels(label_id)
);
GO;

USE testSpotify
CREATE TABLE Albums (
    album_id INT NOT NULL,
    album_name VARCHAR(50) NOT NULL,
    album_artist_id INT ,
    album_total_songs INT NOT NULL,
    album_duration INT,
    album_genre_id INT,
    PRIMARY KEY(album_id),
    FOREIGN KEY(album_artist_id) REFERENCES Artists(artist_id),
    FOREIGN KEY(album_genre_id) REFERENCES Genres(genre_id)
);
GO;

USE testSpotify
CREATE TABLE Songs (
    song_id INT NOT NULL,
    song_name VARCHAR(50) NOT NULL,
    song_artist_id INT NOT NULL,
    song_album_id INT NOT NULL,
    song_duration INT,
    song_release_date DATETIME,
    song_genre_id INT,
    PRIMARY KEY(song_id),
    FOREIGN KEY(song_artist_id) REFERENCES Artists(artist_id),
    FOREIGN KEY(song_album_id) REFERENCES Albums(album_id),
    FOREIGN KEY(song_genre_id) REFERENCES Genres(genre_id)
);
GO;

USE testSpotify
CREATE TABLE Genres (
    genre_id INT NOT NULL,
    genre_name VARCHAR(50) NOT NULL,
    PRIMARY KEY(genre_id)
);
GO;

USE testSpotify
CREATE TABLE Record_Labels (
    record_label_id INT NOT NULL,
    record_label_name VARCHAR(50) NOT NULL,
    num_of_agents INT,
    studio_name VARCHAR(50),
    signed_artist_id INT NOT NULL,
    PRIMARY KEY(record_label_id),
    FOREIGN KEY(signed_artist_id) REFERENCES Artists(artist_id)
);
GO;

USE testSpotify
CREATE TABLE Events (
    event_id INT NOT NULL,
    event_name VARCHAR(50) NOT NULL,
    event_location VARCHAR(50) NOT NULL,
    event_date DATETIME NOT NULL,
    event_ticket_price DECIMAL NOT NULL,
    event_participant_id INT NOT NULL,
    is_available BOOL NOT NULL,
    PRIMARY KEY(event_id),
    FOREIGN KEY(event_participant_id) REFERENCES Artists(artist_id)
);
GO;
-- UPDATE ASSETS
USE testSpotify
INSERT INTO Artists (artist_id, artist_name, artist_genre_id, artist_number_of_albums, artist_record_label_id, artist_signing_date, artist_on_tour)
VALUES (1, 'Metallica', 1, 20, 1, 01-02-1980, "No");

USE testSpotify
INSERT INTO Artists (artist_id, artist_name, artist_genre_id, artist_number_of_albums, artist_record_label_id, artist_signing_date, artist_on_tour)
VALUES (2, 'Toto', 2, 4, 2, 02-12-1980, "No");

USE testSpotify
INSERT INTO Artists (artist_id, artist_name, artist_genre_id, artist_number_of_albums, artist_record_label_id, artist_signing_date, artist_on_tour)
VALUES (3, 'Deadmau5', 3, 25, 3, 12-12-2000, "Yes");

USE testSpotify
INSERT INTO Albums (album_id, album_name, album_artist_id, album_genre_id, album_total_songs, album_duration)
VALUES (1, "Ride The Lightning", 1, 1, 20, 120);


-- VERIFY ASSETS OUTPUT
USE testSpotify
SELECT *
FROM Artists;

USE testSpotify
SELECT *
FROM Albums;

USE testSpotify
SELECT *
FROM Songs;

USE testSpotify
SELECT *
FROM Genres;

USE testSpotify
SELECT *
FROM Record_Labels;

USE testSpotify
SELECT *
FROM Events;

